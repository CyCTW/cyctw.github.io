"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1149],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>g});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),m=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=m(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=m(n),f=a,g=c["".concat(s,".").concat(f)]||c[f]||p[f]||i;return n?r.createElement(g,l(l({ref:t},u),{},{components:n})):r.createElement(g,l({ref:t},u))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=f;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:a,l[1]=o;for(var m=2;m<i;m++)l[m]=n[m];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},6027:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>m});var r=n(7462),a=(n(7294),n(3905));const i={},l="Ch1",o={unversionedId:"ProgrammingLanguages/C++/EffectiveC++/ch1",id:"ProgrammingLanguages/C++/EffectiveC++/ch1",title:"Ch1",description:"Item 1: View C++ as a federation of languages",source:"@site/docs/ProgrammingLanguages/C++/EffectiveC++/ch1.md",sourceDirName:"ProgrammingLanguages/C++/EffectiveC++",slug:"/ProgrammingLanguages/C++/EffectiveC++/ch1",permalink:"/ProgrammingLanguages/C++/EffectiveC++/ch1",draft:!1,editUrl:"https://github.com/CyCTW/cyctw.github.io/tree/master/docs/ProgrammingLanguages/C++/EffectiveC++/ch1.md",tags:[],version:"current",frontMatter:{},sidebar:"mySidebar",previous:{title:"Introduction",permalink:"/ProgrammingLanguages/C++/EffectiveC++/Introduction"},next:{title:"Ranges / Views",permalink:"/ProgrammingLanguages/C++/Ranges"}},s={},m=[{value:"Item 1: View C++ as a federation of languages",id:"item-1-view-c-as-a-federation-of-languages",level:2},{value:"Item 2: Prefer consts, enums, inline to #defines",id:"item-2-prefer-consts-enums-inline-to-defines",level:2},{value:"Item3: Use const whenever possible",id:"item3-use-const-whenever-possible",level:2},{value:"Item4: Make sure that objects are initialized before they&#39;re used.",id:"item4-make-sure-that-objects-are-initialized-before-theyre-used",level:2}],u={toc:m};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"ch1"},"Ch1"),(0,a.kt)("h2",{id:"item-1-view-c-as-a-federation-of-languages"},"Item 1: View C++ as a federation of languages"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"In the beginning, C++ was just C with some oo features tacked on."),(0,a.kt)("li",{parentName:"ul"},"Become modern",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Exceptions required different approaches to structuring function. ","[#Item 29]"),(0,a.kt)("li",{parentName:"ul"},"Templates","[#Item 41]"))),(0,a.kt)("li",{parentName:"ul"},"Now C++ is a multiparadigm programming language",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Combination of procedural, oo, functional, generic, and metapgrogramming features."))),(0,a.kt)("li",{parentName:"ul"},"View c++ as a federation of related languages."),(0,a.kt)("li",{parentName:"ul"},"Four subranges",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"C",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Builtin data types, pointer, arrays."))),(0,a.kt)("li",{parentName:"ul"},"Object-oriented C++",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"C tiwh classes."),(0,a.kt)("li",{parentName:"ul"},"Encapsulation, inheritence, polymorphism, v-function."))),(0,a.kt)("li",{parentName:"ul"},"Template C++",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"common"),(0,a.kt)("li",{parentName:"ul"},"TMP(Template metaprogramming)"))),(0,a.kt)("li",{parentName:"ul"},"STL",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"A template library.")))))),(0,a.kt)("h2",{id:"item-2-prefer-consts-enums-inline-to-defines"},"Item 2: Prefer consts, enums, inline to #defines"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Prefer compiler to preprocesser"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"#defines is handled by preprocessor, not compiler."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"#define can cause problem because it just doing replacement."),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Use const instead"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"2 special cases when using #define"),(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},"const pointer"),(0,a.kt)("li",{parentName:"ol"},"const class member"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"use inline instead of #define func"))),(0,a.kt)("h2",{id:"item3-use-const-whenever-possible"},"Item3: Use const whenever possible"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"mutable variable: use when a const member function need to modify a data member.")),(0,a.kt)("h2",{id:"item4-make-sure-that-objects-are-initialized-before-theyre-used"},"Item4: Make sure that objects are initialized before they're used."))}c.isMDXComponent=!0}}]);